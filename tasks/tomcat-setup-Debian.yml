- name: Update all packages
  ansible.builtin.apt:
    name: "*"
    state: latest

- name: Install Default Java
  ansible.builtin.apt:
    name: default-jdk
    state: present
    update_cache: true

- name: Add tomcat group
  ansible.builtin.group:
    name: tomcat

- name: Add tomcat user
  ansible.builtin.user:
    name: tomcat
    group: tomcat
    home: /usr/share/tomcat
    create_home: false
    system: true

- name: Download tomcat
  ansible.builtin.get_url:
    url: "{{ tomcat_archive_url }}"
    dest: "{{ tomcat_archive_dest }}"
    checksum: "{{ tomcat_checksum }}"

- name: create tomcat directory
  ansible.builtin.file:
    path: /usr/share/tomcat
    state: directory
    owner: tomcat
    group: tomcat

- name: Expand tomcat
  ansible.builtin.unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: /usr/share/tomcat
    owner: tomcat
    group: tomcat
    remote_src: true
    extra_opts: "--strip-components=1"
    creates: /usr/share/tomcat/bin

- name: Copy tomcat service file
  ansible.builtin.template:
    src: templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
    mode: "a+x"
  when: ansible_service_mgr == "systemd"

- name: Start and Enable tomcat
  ansible.builtin.service:
    daemon_reload: yes
    name: tomcat
    state: started
    enabled: true
  when: ansible_service_mgr == "systemd"

- name: Set UI access credentials
  ansible.builtin.template:
    src: tomcat-users.xml.j2
    dest: /usr/share/tomcat/conf/tomcat-users.xml
  notify: restart tomcat

- name: Allow access to Manager and Host Manager apps from any IP
  ansible.builtin.template:
    src: context.xml.j2
    dest: "{{ item }}"
  with_items:
    - /usr/share/tomcat/webapps/host-manager/META-INF/context.xml
    - /usr/share/tomcat/webapps/manager/META-INF/context.xml
  notify: restart tomcat  
